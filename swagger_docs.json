{
    "openapi": "3.0.3",
    "info": {
        "title": "",
        "description": "",
        "version": "0.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/api/carinfos": {
            "get": {
                "operationId": "getCarinfoCollection",
                "tags": [
                    "Carinfo"
                ],
                "responses": {
                    "200": {
                        "description": "Carinfo collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Carinfo-carinfo_person"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Carinfo resources.",
                "description": "Retrieves the collection of Carinfo resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postCarinfoCollection",
                "tags": [
                    "Carinfo"
                ],
                "responses": {
                    "201": {
                        "description": "Carinfo resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Carinfo-carinfo_person"
                                }
                            }
                        },
                        "links": {
                            "GetCarinfoItem": {
                                "operationId": "getCarinfoItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/carinfos/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Carinfo resource.",
                "description": "Creates a Carinfo resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Carinfo resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Carinfo-carinfo_person"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/carinfos/{id}": {
            "get": {
                "operationId": "getCarinfoItem",
                "tags": [
                    "Carinfo"
                ],
                "responses": {
                    "200": {
                        "description": "Carinfo resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Carinfo-carinfo_person"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Carinfo resource.",
                "description": "Retrieves a Carinfo resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putCarinfoItem",
                "tags": [
                    "Carinfo"
                ],
                "responses": {
                    "200": {
                        "description": "Carinfo resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Carinfo-carinfo_person"
                                }
                            }
                        },
                        "links": {
                            "GetCarinfoItem": {
                                "operationId": "getCarinfoItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/carinfos/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Carinfo resource.",
                "description": "Replaces the Carinfo resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Carinfo resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Carinfo-carinfo_person"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteCarinfoItem",
                "tags": [
                    "Carinfo"
                ],
                "responses": {
                    "204": {
                        "description": "Carinfo resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Carinfo resource.",
                "description": "Removes the Carinfo resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchCarinfoItem",
                "tags": [
                    "Carinfo"
                ],
                "responses": {
                    "200": {
                        "description": "Carinfo resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Carinfo-carinfo_person"
                                }
                            }
                        },
                        "links": {
                            "GetCarinfoItem": {
                                "operationId": "getCarinfoItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/carinfos/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Carinfo resource.",
                "description": "Updates the Carinfo resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Carinfo resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Carinfo-carinfo_person"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/jobs": {
            "get": {
                "operationId": "getJobCollection",
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "Job collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Job resources.",
                "description": "Retrieves the collection of Job resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postJobCollection",
                "tags": [
                    "Job"
                ],
                "responses": {
                    "201": {
                        "description": "Job resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        },
                        "links": {
                            "GetJobItem": {
                                "operationId": "getJobItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/jobs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Job resource.",
                "description": "Creates a Job resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Job resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/jobs/{id}": {
            "get": {
                "operationId": "getJobItem",
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "Job resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Job resource.",
                "description": "Retrieves a Job resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putJobItem",
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "Job resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        },
                        "links": {
                            "GetJobItem": {
                                "operationId": "getJobItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/jobs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Job resource.",
                "description": "Replaces the Job resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Job resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteJobItem",
                "tags": [
                    "Job"
                ],
                "responses": {
                    "204": {
                        "description": "Job resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Job resource.",
                "description": "Removes the Job resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchJobItem",
                "tags": [
                    "Job"
                ],
                "responses": {
                    "200": {
                        "description": "Job resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        },
                        "links": {
                            "GetJobItem": {
                                "operationId": "getJobItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/jobs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Job resource.",
                "description": "Updates the Job resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Job resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/masters": {
            "get": {
                "operationId": "getMasterCollection",
                "tags": [
                    "Master"
                ],
                "responses": {
                    "200": {
                        "description": "Master collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Master"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Master resources.",
                "description": "Retrieves the collection of Master resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMasterCollection",
                "tags": [
                    "Master"
                ],
                "responses": {
                    "201": {
                        "description": "Master resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Master"
                                }
                            }
                        },
                        "links": {
                            "GetMasterItem": {
                                "operationId": "getMasterItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/masters/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Master resource.",
                "description": "Creates a Master resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Master resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Master"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/masters/{id}": {
            "get": {
                "operationId": "getMasterItem",
                "tags": [
                    "Master"
                ],
                "responses": {
                    "200": {
                        "description": "Master resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Master"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Master resource.",
                "description": "Retrieves a Master resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMasterItem",
                "tags": [
                    "Master"
                ],
                "responses": {
                    "200": {
                        "description": "Master resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Master"
                                }
                            }
                        },
                        "links": {
                            "GetMasterItem": {
                                "operationId": "getMasterItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/masters/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Master resource.",
                "description": "Replaces the Master resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Master resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Master"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMasterItem",
                "tags": [
                    "Master"
                ],
                "responses": {
                    "204": {
                        "description": "Master resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Master resource.",
                "description": "Removes the Master resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchMasterItem",
                "tags": [
                    "Master"
                ],
                "responses": {
                    "200": {
                        "description": "Master resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Master"
                                }
                            }
                        },
                        "links": {
                            "GetMasterItem": {
                                "operationId": "getMasterItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/masters/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Master resource.",
                "description": "Updates the Master resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Master resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Master"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/orders": {
            "get": {
                "operationId": "getOrderCollection",
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Order collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order-read_carinfo_jobs_works_person_workstatus"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Order resources.",
                "description": "Retrieves the collection of Order resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postOrderCollection",
                "tags": [
                    "Order"
                ],
                "responses": {
                    "201": {
                        "description": "Order resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order-read_carinfo_jobs_works_person_workstatus"
                                }
                            }
                        },
                        "links": {
                            "GetOrderItem": {
                                "operationId": "getOrderItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/orders/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Order resource.",
                "description": "Creates a Order resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Order resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order-read_carinfo_jobs_works_person_workstatus"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/orders/{id}": {
            "get": {
                "operationId": "getOrderItem",
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Order resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order-read_carinfo_jobs_works_person_workstatus"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Order resource.",
                "description": "Retrieves a Order resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putOrderItem",
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Order resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order-read_carinfo_jobs_works_person_workstatus"
                                }
                            }
                        },
                        "links": {
                            "GetOrderItem": {
                                "operationId": "getOrderItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/orders/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Order resource.",
                "description": "Replaces the Order resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Order resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order-read_carinfo_jobs_works_person_workstatus"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteOrderItem",
                "tags": [
                    "Order"
                ],
                "responses": {
                    "204": {
                        "description": "Order resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Order resource.",
                "description": "Removes the Order resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchOrderItem",
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Order resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order-read_carinfo_jobs_works_person_workstatus"
                                }
                            }
                        },
                        "links": {
                            "GetOrderItem": {
                                "operationId": "getOrderItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/orders/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Order resource.",
                "description": "Updates the Order resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Order resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order-read_carinfo_jobs_works_person_workstatus"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/people": {
            "get": {
                "operationId": "getPersonCollection",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "200": {
                        "description": "Person collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Person resources.",
                "description": "Retrieves the collection of Person resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postPersonCollection",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "201": {
                        "description": "Person resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "links": {
                            "GetPersonItem": {
                                "operationId": "getPersonItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/people/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Person resource.",
                "description": "Creates a Person resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Person resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/people/{id}": {
            "get": {
                "operationId": "getPersonItem",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "200": {
                        "description": "Person resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Person resource.",
                "description": "Retrieves a Person resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putPersonItem",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "200": {
                        "description": "Person resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "links": {
                            "GetPersonItem": {
                                "operationId": "getPersonItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/people/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Person resource.",
                "description": "Replaces the Person resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Person resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deletePersonItem",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "204": {
                        "description": "Person resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Person resource.",
                "description": "Removes the Person resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchPersonItem",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "200": {
                        "description": "Person resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "links": {
                            "GetPersonItem": {
                                "operationId": "getPersonItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/people/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Person resource.",
                "description": "Updates the Person resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Person resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/works": {
            "get": {
                "operationId": "getWorkCollection",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "200": {
                        "description": "Work collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Work resources.",
                "description": "Retrieves the collection of Work resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postWorkCollection",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "201": {
                        "description": "Work resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work"
                                }
                            }
                        },
                        "links": {
                            "GetWorkItem": {
                                "operationId": "getWorkItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/works/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Work resource.",
                "description": "Creates a Work resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Work resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Work"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/works/{id}": {
            "get": {
                "operationId": "getWorkItem",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "200": {
                        "description": "Work resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Work resource.",
                "description": "Retrieves a Work resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putWorkItem",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "200": {
                        "description": "Work resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work"
                                }
                            }
                        },
                        "links": {
                            "GetWorkItem": {
                                "operationId": "getWorkItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/works/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Work resource.",
                "description": "Replaces the Work resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Work resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Work"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteWorkItem",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "204": {
                        "description": "Work resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Work resource.",
                "description": "Removes the Work resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchWorkItem",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "200": {
                        "description": "Work resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work"
                                }
                            }
                        },
                        "links": {
                            "GetWorkItem": {
                                "operationId": "getWorkItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/works/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Work resource.",
                "description": "Updates the Work resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Work resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Work"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/workstatuses": {
            "get": {
                "operationId": "getWorkstatusCollection",
                "tags": [
                    "Workstatus"
                ],
                "responses": {
                    "200": {
                        "description": "Workstatus collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Workstatus-read_workstatus"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Workstatus resources.",
                "description": "Retrieves the collection of Workstatus resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postWorkstatusCollection",
                "tags": [
                    "Workstatus"
                ],
                "responses": {
                    "201": {
                        "description": "Workstatus resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workstatus-read_workstatus"
                                }
                            }
                        },
                        "links": {
                            "GetWorkstatusItem": {
                                "operationId": "getWorkstatusItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/workstatuses/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Workstatus resource.",
                "description": "Creates a Workstatus resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Workstatus resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workstatus-read_workstatus"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/workstatuses/{id}": {
            "get": {
                "operationId": "getWorkstatusItem",
                "tags": [
                    "Workstatus"
                ],
                "responses": {
                    "200": {
                        "description": "Workstatus resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workstatus-read_workstatus"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Workstatus resource.",
                "description": "Retrieves a Workstatus resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putWorkstatusItem",
                "tags": [
                    "Workstatus"
                ],
                "responses": {
                    "200": {
                        "description": "Workstatus resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workstatus-read_workstatus"
                                }
                            }
                        },
                        "links": {
                            "GetWorkstatusItem": {
                                "operationId": "getWorkstatusItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/workstatuses/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Workstatus resource.",
                "description": "Replaces the Workstatus resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Workstatus resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workstatus-read_workstatus"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteWorkstatusItem",
                "tags": [
                    "Workstatus"
                ],
                "responses": {
                    "204": {
                        "description": "Workstatus resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Workstatus resource.",
                "description": "Removes the Workstatus resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchWorkstatusItem",
                "tags": [
                    "Workstatus"
                ],
                "responses": {
                    "200": {
                        "description": "Workstatus resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workstatus-read_workstatus"
                                }
                            }
                        },
                        "links": {
                            "GetWorkstatusItem": {
                                "operationId": "getWorkstatusItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/workstatuses/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Workstatus resource.",
                "description": "Updates the Workstatus resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Workstatus resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workstatus-read_workstatus"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        }
    },
    "components": {
        "schemas": {
            "Carinfo-carinfo_person": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "year": {
                        "type": "integer"
                    },
                    "vincode": {
                        "type": "string"
                    },
                    "numder": {
                        "type": "string"
                    },
                    "client": {
                        "$ref": "#/components/schemas/Person-carinfo_person"
                    }
                }
            },
            "Carinfo-read_carinfo_jobs_works_person_workstatus": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "year": {
                        "type": "integer"
                    },
                    "vincode": {
                        "type": "string"
                    },
                    "numder": {
                        "type": "string"
                    },
                    "client": {
                        "$ref": "#/components/schemas/Person-read_carinfo_jobs_works_person_workstatus"
                    }
                }
            },
            "Job": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "pricework": {
                        "type": "integer"
                    },
                    "_order": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "order": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "Job-read_carinfo_jobs_works_person_workstatus": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "pricework": {
                        "type": "integer"
                    }
                }
            },
            "Master": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "photo": {
                        "type": "string"
                    },
                    "info": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "Order-read_carinfo_jobs_works_person_workstatus": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "carinfo": {
                        "$ref": "#/components/schemas/Carinfo-read_carinfo_jobs_works_person_workstatus"
                    },
                    "typejobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job-read_carinfo_jobs_works_person_workstatus"
                        }
                    },
                    "client": {
                        "$ref": "#/components/schemas/Person-read_carinfo_jobs_works_person_workstatus"
                    },
                    "master": {
                        "$ref": "#/components/schemas/Person-read_carinfo_jobs_works_person_workstatus"
                    },
                    "description": {
                        "type": "string"
                    },
                    "finalprice": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "nowItWork": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Work-read_carinfo_jobs_works_person_workstatus"
                        }
                    }
                }
            },
            "Person": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "carinfos": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            },
            "Person-carinfo_person": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "Person-read_carinfo_jobs_works_person_workstatus": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "Work": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "Work-read_carinfo_jobs_works_person_workstatus": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "Work-read_workstatus": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "Workstatus-read_workstatus": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "work": {
                        "$ref": "#/components/schemas/Work-read_workstatus"
                    }
                },
                "required": [
                    "work"
                ]
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {}
    },
    "security": [],
    "tags": []
}